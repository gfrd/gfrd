GFRD Simulator

Original code by Koichi Takahashi.
Adapted by Thomas Miedema and Laurens Bossen.

Copyright (C) 2005-2008 The E-Cell Project
Copyright (C) 2009 Fom Institute Amolf, The Netherlands.



About this package
========================

This package is started of from version 0.3 of the E-Cell Particle Dynamics
Prototype (epdp):
http://www.e-cell.org/ecell/software/releases/epdp-0.3/epdp-0.3.tar.gz

Just as that package it implements the enhanced Greens Function Reaction
Dynamics (eGFRD), and brute-force Brownian Dynamics (BD) simulation
algorithms. Additionaly it support reaction-diffusion on and with 1D
and 2D surfaces.

The code is implemented with the hope that it will eventually be
included into the epdp package, and also function as a standalone GFRD
implementation.

The eGFRD algorithm is used and described in the following paper:
K. Takahashi, S. Tanase-Nicola, P.R. ten Wolde, 2009 (in preparation).


Building this package
========================

See INSTALL.


History of the Code
========================

Koichi Takahashi initially stated development of the code in 2005 to
implement his prototype of Greens Function Reaction Dynamics
simulation method invented by Jeroen van Zon and Pieter Rein ten Wolde
in AMOLF, Amsterdam[1,2].  He gave a brief invited talk about
performance evaluation and applicability of the method to yeast
pheromon response pathway (the Alpha pathway) using the prototype in
Third Annual Alpha Project Research Symposium (June 16-27, 2005, at UC
Berkeley Art Museum).

Later, in December 2006, ten Wolde, Sorin Tanase-Nicola, and Takahashi
decided to introduce the concept called first-passage processes
inspired by a paper by Opplestrup et al.[3] to Greens Function
Reaction Dynamics to further boost the performance and accuracy of the
method.  The new method was called eGFRD (enhanced Greens Function
Reaction Dynamics).  Takahashi implemented the single-body Greens
function within the year.  Tanase-Nicola derived the two-body Greens
function, and Takahashi devised and implemented a neat yet complicated
way to efficiently evaluate the function mostly in the first half of
2007.  Takahashi also implemented the main part of the code,
asynchronous discrete-event-driven kinetic monte-carlo, which has been
mostly finished within 2007, and the dynamic switching between Greens
function and brute-force Brownian Dynamics as a means to recover from
particle squeezing conditions by April 2008.  At this point,
development and debugging of the initial version (version 0.1) of the
code had been largely finished and had been used in simulation experiments
in study of various biochemical systems including dual-phosphorylation
pathways[4].

Thomas Miedema and Laurens Bossen, while masters students in the group of
Pieter Rein ten Wolde at Amolf, added support for reaction-diffusion on
and with 1D and 2D surfaces. Laurens implemented the 1D and 2D Greens
functions in C++, Thomas implemented the algorithm in Python.

Some features planned to be added are; interactions between
membrane proteins and proteins in solution.

[1] Green's-function reaction dynamics: a particle-based approach for
    simulating biochemical networks in time and space; 
    van Zon and ten Wolde, J. Chem. Phys. 123 (2005).
[2] Simulating biochemical networks at the particle level and in
    time and space: Green's function reaction dynamics; 
    van Zon and ten Wolde, Phys. Rev. Lett. 94 (2005).
[3] First-Passage Monte Carlo Algorithm: Diffusion without All the Hops,
    Opplestrup et al., Phys. Rev. Lett. 97 (2006).
[4] Takahashi, Tanase-Nicola and ten Wolde, in preparation.


