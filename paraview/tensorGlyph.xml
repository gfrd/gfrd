<!-- Adapted from Glyph in Servers/ServerManager/Resources/filters.xml -->

<ServerManagerConfiguration>
  <ProxyGroup name="sources">
   <SourceProxy name="Point Load" class="vtkPointLoad">
     <DoubleVectorProperty
        name="LoadValue"
        command="SetLoadValue"
        default_values="100"
        number_of_elements="1">
     </DoubleVectorProperty>
      <IntVectorProperty
        name="ComputeEffectiveStress"
        command="SetComputeEffectiveStress"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <IntVectorProperty
         name="ModelBounds"
         command="SetModelBounds"
         number_of_elements="6"
         default_values="-10 10 -10 10 -10 10" >
      </IntVectorProperty>
      <IntVectorProperty
         name="SampleDimensions"
         command="SetSampleDimensions"
         number_of_elements="3"
         default_values="6 6 6" >
      </IntVectorProperty>
   </SourceProxy>
  </ProxyGroup> 


  <ProxyGroup name="filters">
   <SourceProxy name="Tensor Glyph" class="vtkTensorGlyph">
       <InputProperty
        name="Input"
        command="SetInputConnection">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
             <Group name="filters"/>
           </ProxyGroupDomain>
           <DataTypeDomain name="input_type">
             <DataType value="vtkDataSet"/>
           </DataTypeDomain>
           <InputArrayDomain name="input_array1" attribute_type="point"
                             number_of_components="9" optional="1"/>
                            <!-- Do not uncomment.
                                 See vtk_xml_serial_unstructured.

            # I think there is a bug actually in VTK somewhere, when using
            tensorGlyph.xml to make a vtkTensorGlyph object with both a Tensor 
            array and a Scalar array. When you select a Tensor or a Scalar 
            array from the dropdown menu and click 'apply',
            SetInputArrayToProcess is called with idx = 0 both times. This is 
            wrong.
             1. First element Tensor array gets overwritten.
             2. Scalar value is never written (which is accessed using
                GetInputArrayToProcess with an idx of 1).

           <InputArrayDomain name="input_array2" attribute_type="point"
                             number_of_components="1" optional="1"/>
                           -->
           <InputArrayDomain name="input_array3" attribute_type="point"
                             number_of_components="3" optional="1"/>
           <Documentation>
             This property specifies the input to the filter.
           </Documentation>
      </InputProperty>

      <StringVectorProperty 
          name="SelectInputTensors" 
          command="SetInputArrayToProcess"
          number_of_elements="5"
          element_types="0 0 0 0 2"
          label="Tensors">
        <ArrayListDomain name="array_list" attribute_type="Tensors" 
                         input_domain_name="input_array1">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property indicates the name of the tensor array
        </Documentation>
      </StringVectorProperty>

                            <!-- Do not uncomment.
                                 See vtk_xml_serial_unstructured.

      <StringVectorProperty
          name="SelectInputScalars"
          command="SetInputArrayToProcess"
          number_of_elements="5"
          element_types="0 0 0 0 2"
          label="Scalars">
        <ArrayListDomain name="array_list" attribute_type="Scalars" 
                         input_domain_name="input_array2">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property indicates the name of the scalar array
        </Documentation>
      </StringVectorProperty>
                           -->

     <StringVectorProperty 
        name="SelectInputVectors" 
        command="SetInputArrayToProcess"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        default_values="1"
        label="Vectors">  <!-- default value=1 so normals go to the right place -->
          <ArrayListDomain name="array_list" attribute_type="Vectors"
               input_domain_name="input_array3">
            <RequiredProperties>
               <Property name="Input" function="Input"/>
            </RequiredProperties>
          </ArrayListDomain>
          <Documentation>
          This property indicates the name of the vector array
          </Documentation>
     </StringVectorProperty>

      <InputProperty
        name="Source"
        command="SetSourceConnection"
        label="Glyph Type">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
             <Group name="glyph_sources" />
           </ProxyGroupDomain>
           <DataTypeDomain name="input_type">
             <DataType value="vtkPolyData"/>
           </DataTypeDomain>
           <ProxyListDomain name="proxy_list">
              <Proxy group="sources" name="CylinderSource" />
              <Proxy group="sources" name="CubeSource" />
              <Proxy group="sources" name="ArrowSource" />
           </ProxyListDomain>
           <Documentation>
             This property determines which type of glyph will be placed at the 
points in the input dataset.
           </Documentation>
      </InputProperty>

      <IntVectorProperty
        name="ColorGlyphs"
        command="SetColorGlyphs"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="ColorMode"
        command="SetColorMode"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="Symmetric"
        command="SetSymmetric"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="Scaling"
        command="SetScaling"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="ClampScaling"
        command="SetClampScaling"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="ExtractEigenvalues"
        command="SetExtractEigenvalues"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="ThreeGlyphs"
        command="SetThreeGlyphs"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="ScaleFactor"
        command="SetScaleFactor"
        number_of_elements="1"
        default_values="1">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="MaxScaleFactor"
        command="SetMaxScaleFactor"
        number_of_elements="1"
        default_values="1">
      </DoubleVectorProperty>

   </SourceProxy>
  </ProxyGroup>
  
</ServerManagerConfiguration>

